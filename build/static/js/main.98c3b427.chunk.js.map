{"version":3,"sources":["redux/phonebook/phonebookActions.js","redux/auth/authSelector.js","routes/mainRoutes.js","routes/PrivateRoute.js","routes/PublicRoute.js","Components/Main/Main.js","Components/Navigation/NavigationListItem.jsx","Components/UserInfo/UserInfo.jsx","Components/Navigation/Navigation.js","Components/Navigation/Header.js","Components/App.js","redux/phonebook/phonebookReducer.js","redux/auth/authReducers.js","redux/store.js","index.js","redux/auth/authActions.js"],"names":["getAllContacts","createAction","addContact","deleteContact","setFilter","resetError","setError","setLoading","errorSelector","state","auth","error","mainRoutes","name","path","exact","component","lazy","isPrivate","isRestricted","PrivateRoute","isAuth","to","PublicRoute","connect","token","idToken","fallback","type","color","height","width","className","map","item","key","NavigationListItem","location","pathname","from","displayName","xmlns","viewBox","fill","fillRule","d","clipRule","logout","withRouter","onClick","Header","App","contactsReducer","createReducer","_","payload","filter","contact","id","filterReducer","loaderReducer","errorReducer","tokenReducer","registerSuccess","loginSuccess","registerRequest","registerError","loginRequest","loginError","authReducer","combineReducers","isLoading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","storage","whitelist","rootReducer","contacts","persistReducer","store","configureStore","reducer","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98c3b427.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const getAllContacts = createAction(\"contacts/getAllContacts\");\r\nexport const addContact = createAction(\"contacts/addContact\");\r\nexport const deleteContact = createAction(\"contacts/deleteContact\");\r\nexport const setFilter = createAction(\"filter/setFilter\");\r\nexport const resetError = createAction(\"contacts/resetError\");\r\nexport const setError = createAction(\"contacts/setError\");\r\nexport const setLoading = createAction(\"contacts/setLoading\");\r\n","export const errorSelector = (state) => state.auth.error;\r\n","import { lazy } from \"react\";\r\n\r\nconst mainRoutes = [\r\n  {\r\n    name: \"Home\",\r\n    path: \"/\",\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import(\"../pages/HomePage\" /*webpackChunkName:'HomePage'*/)\r\n    ),\r\n    isPrivate: false,\r\n    isRestricted: false,\r\n  },\r\n  {\r\n    name: \"Contacts\",\r\n    path: \"/contacts\",\r\n    exact: false,\r\n    component: lazy(() =>\r\n      import(\"../pages/ContactsPage\" /*webpackChunkName:'Contacts'*/)\r\n    ),\r\n    isPrivate: true,\r\n    isRestricted: false,\r\n  },\r\n\r\n  {\r\n    name: \"Registration\",\r\n    path: \"/registration\",\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import(\"../pages/AuthPage\" /*webpackChunkName:'AuthPage'*/)\r\n    ),\r\n    isPrivate: false,\r\n    isRestricted: true,\r\n  },\r\n  {\r\n    name: \"Login\",\r\n    path: \"/login\",\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import(\"../pages/AuthPage\" /*webpackChunkName:'AuthPage'*/)\r\n    ),\r\n    isPrivate: false,\r\n    isRestricted: true,\r\n  },\r\n];\r\nexport default mainRoutes;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ path, exact, component, isAuth }) => {\r\n  return isAuth ? (\r\n    <Route path={path} exact={exact} component={component} />\r\n  ) : (\r\n    <Redirect to=\"/login\" />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst PublicRoute = ({ path, exact, component, isAuth, isRestricted }) => {\r\n  return isAuth && isRestricted ? (\r\n    <Redirect to=\"/contacts\" />\r\n  ) : (\r\n    <Route path={path} exact={exact} component={component} />\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import React, { Suspense } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { connect } from \"react-redux\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport { errorSelector } from \"../../redux/auth/authSelector\";\r\nimport mainRoutes from \"../../routes/mainRoutes\";\r\nimport PrivateRoute from \"../../routes/PrivateRoute\";\r\nimport PublicRoute from \"../../routes/PublicRoute\";\r\n\r\nconst Main = ({ isAuth, error }) => {\r\n  return (\r\n    <>\r\n      <Suspense\r\n        fallback={\r\n          // <h2>Loading...</h2>\r\n\r\n          <Loader\r\n            type=\"Oval\"\r\n            color=\"rgb(16, 185, 129)\"\r\n            height={50}\r\n            width={50}\r\n            className=\"  flex flex-wrap justify-center items-center/\"\r\n          />\r\n        }\r\n      >\r\n        {/* {error && <h3 className=\"text-red-500\">{error}</h3>} */}\r\n        <Switch>\r\n          {mainRoutes.map((item) =>\r\n            item.isPrivate ? (\r\n              <PrivateRoute {...item} key={item.path} isAuth={isAuth} />\r\n            ) : (\r\n              <PublicRoute {...item} key={item.path} isAuth={isAuth} />\r\n            )\r\n          )}\r\n        </Switch>\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.token?.idToken,\r\n  error: errorSelector(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Main);\r\n","import { NavLink } from \"react-router-dom\";\r\n\r\nconst NavigationListItem = ({ item, location, isAuth }) => {\r\n  return (\r\n    <>\r\n      {!item.isPrivate && !item.isRestricted && (\r\n        <li>\r\n          <NavLink\r\n            to={{\r\n              pathname: item.path,\r\n              state: { from: location.pathname },\r\n            }}\r\n            exact={item.exact}\r\n          >\r\n            {item.name}\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n\r\n      {isAuth && item.isPrivate && !item.isRestricted && (\r\n        <li>\r\n          <NavLink\r\n            to={{\r\n              pathname: item.path,\r\n              state: { from: location.pathname },\r\n            }}\r\n            exact={item.exact}\r\n          >\r\n            {item.name}\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n\r\n      {!isAuth && !item.isPrivate && item.isRestricted && (\r\n        <li>\r\n          <NavLink\r\n            to={{\r\n              pathname: item.path,\r\n              state: {\r\n                from: location.pathname,\r\n              },\r\n            }}\r\n            exact={item.exact}\r\n          >\r\n            {item.name}\r\n          </NavLink>\r\n        </li>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavigationListItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nconst UserInfo = ({ displayName }) => {\r\n  return (\r\n    <>\r\n      <svg\r\n        className=\"w-10 h-10 text-green-500  \"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"currentColor\"\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\"\r\n          clipRule=\"evenodd\"\r\n        />\r\n      </svg>\r\n      <p className=\" pr-4 text-red-500\">{displayName}</p>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  displayName: state.auth.token.displayName,\r\n});\r\n\r\nexport default connect(mapStateToProps)(UserInfo);\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport mainRoutes from \"../../routes/mainRoutes\";\r\nimport { logout } from \"../../redux/auth/authActions\";\r\nimport NavigationListItem from \"./NavigationListItem\";\r\nimport UserInfo from \"../UserInfo/UserInfo\";\r\n\r\nconst Navigation = ({ location, logout, isAuth }) => {\r\n  // const dispatch = useDispatch();\r\n  // const signOut = () => dispatch(logout());\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"flex justify-between items-center\">\r\n        {mainRoutes.map((item) => (\r\n          <NavigationListItem\r\n            item={item}\r\n            location={location}\r\n            key={item.path}\r\n            isAuth={isAuth}\r\n          />\r\n        ))}\r\n        {isAuth && (\r\n          <li className=\"flex items-center\">\r\n            <UserInfo />\r\n            <button\r\n              className=\"w-full px-6 py-1  text-lg text-white transition-all duration-150 ease-linear rounded-lg shadow outline-none bg-green-500 hover:bg-green-800 hover:shadow-lg focus:outline-none\"\r\n              type=\"button\"\r\n              onClick={() => logout()}\r\n            >\r\n              Log out\r\n            </button>\r\n          </li>\r\n        )}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.token.idToken,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(withRouter(Navigation));\r\n","import React from \"react\";\r\nimport Navigation from \"./Navigation\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <NavLink to=\"/\"></NavLink>\r\n      <Navigation />\r\n    </>\r\n  );\r\n};\r\nexport default Header;\r\n","import Main from \"./Main/Main\";\r\nimport Header from \"./Navigation/Header\";\r\n\r\n// import Phonebook from \"./Phonebook/Phonebook\";\r\n\r\nconst App = () => (\r\n  <>\r\n    <div className=\"relative mx-auto max-w-md px-8 py-12 bg-white border-0 shadow-lg sm:rounded-3xl \">\r\n      <Header />\r\n      <Main />\r\n      {/* <Phonebook /> */}\r\n    </div>\r\n  </>\r\n);\r\nexport default App;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  getAllContacts,\r\n  resetError,\r\n  setError,\r\n  setFilter,\r\n  setLoading,\r\n} from \"./phonebookActions\";\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [getAllContacts]: (_, { payload }) => payload,\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) => [\r\n    ...state.filter((contact) => contact.id !== payload),\r\n  ],\r\n});\r\nconst filterReducer = createReducer(\"\", {\r\n  [setFilter]: (_, { payload }) => payload,\r\n});\r\nconst loaderReducer = createReducer(false, { [setLoading]: (state) => !state });\r\nconst errorReducer = createReducer(\"\", {\r\n  [setError]: (_, { payload }) => payload,\r\n  [resetError]: () => \"\",\r\n});\r\n\r\nexport { contactsReducer, filterReducer, errorReducer, loaderReducer };\r\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  loginError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  logout,\r\n  registerError,\r\n  registerRequest,\r\n  registerSuccess,\r\n} from \"./authActions\";\r\n\r\nconst tokenReducer = createReducer(\r\n  {},\r\n  {\r\n    [registerSuccess]: (_, { payload }) => payload,\r\n    [loginSuccess]: (_, { payload }) => payload,\r\n    [logout]: () => ({}),\r\n  }\r\n);\r\nconst loaderReducer = createReducer(false, {\r\n  [registerRequest]: (state) => !state,\r\n  [registerSuccess]: (state) => !state,\r\n  [registerError]: (state) => !state,\r\n  [loginSuccess]: (state) => !state,\r\n  [loginRequest]: (state) => !state,\r\n  [loginError]: (state) => !state,\r\n  [logout]: () => false,\r\n});\r\n\r\nconst errorReducer = createReducer(\"\", {\r\n  [registerError]: (_, { payload }) => payload,\r\n  [loginError]: (_, { payload }) => payload,\r\n  [logout]: () => \"\",\r\n});\r\n\r\nconst authReducer = combineReducers({\r\n  token: tokenReducer,\r\n  isLoading: loaderReducer,\r\n  error: errorReducer,\r\n});\r\nexport default authReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  contactsReducer,\r\n  errorReducer,\r\n  filterReducer,\r\n  loaderReducer,\r\n} from \"./phonebook/phonebookReducer\";\r\nimport authReducer from \"./auth/authReducers\";\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n  persistStore,\r\n  persistReducer,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst persistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  error: errorReducer,\r\n  isLoading: loaderReducer,\r\n  auth: persistReducer(persistConfig, authReducer),\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n});\r\npersistStore(store);\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./Components/App\";\nimport \"./index.css\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const registerRequest = createAction(\"auth/registerRequest\");\r\nexport const registerSuccess = createAction(\"auth/registerSuccess\");\r\nexport const registerError = createAction(\"auth/registerError\");\r\n\r\nexport const loginRequest = createAction(\"auth/loginRequest\");\r\nexport const loginSuccess = createAction(\"auth/loginSuccess\");\r\nexport const loginError = createAction(\"auth/loginError\");\r\n\r\nexport const logout = createAction(\"auth/logout\");\r\n"],"sourceRoot":""}