{"version":3,"sources":["redux/auth/authOperations.js","Components/Auth/Validation/validator.js","Components/Auth/AuthForm.js","pages/AuthPage.js"],"names":["API_KEY","process","schema","yup","shape","email","required","password","min","max","matches","AuthForm","state","this","props","location","pathname","initialValues","validationSchema","onSubmit","values","registerOperation","loginOperation","isSubmitting","type","name","placeholder","className","component","disabled","Component","connect","user","dispatch","a","registerRequest","axios","post","returnSecureToken","data","registerSuccess","localId","idToken","role","registerError","response","error","message","loginRequest","loginSuccess","loginError","withRouter","AuthPage"],"mappings":"0QAUMA,EAAUC,0C,kBCGDC,EAXFC,MAAaC,MAAM,CAC9BC,MAAOF,MAAaE,QAAQC,WAC5BC,SAAUJ,MAEPG,SAAS,0BACTE,IAAI,EAAG,iBACPC,IAAI,GAAI,kBACRC,QAAQ,2CAA4C,qB,OCCnDC,E,4MACJC,MAAQ,G,4CAER,WAAU,IAAD,OACP,OACE,mCACE,gCACE,6BACoC,kBAAjCC,KAAKC,MAAMC,SAASC,SACjB,gBACA,UAEN,cAAC,IAAD,CACEC,cAAe,CAAEZ,MAAO,GAAIE,SAAU,IACtCW,iBAAkBhB,EAClBiB,SAAU,SAACC,GACwB,kBAAjC,EAAKN,MAAMC,SAASC,SAChB,EAAKF,MAAMO,kBAAkBD,GAC7B,EAAKN,MAAMQ,eAAeF,IANlC,SASG,gBAAGG,EAAH,EAAGA,aAAH,OACC,cAAC,IAAD,UACoC,kBAAjC,EAAKT,MAAMC,SAASC,SACnB,qCACE,0CAEE,cAAC,IAAD,CACEQ,KAAK,OACLC,KAAK,cACLC,YAAY,YACZC,UAAU,8NAEZ,cAAC,IAAD,CAAcF,KAAK,cAAcG,UAAU,WAE7C,2CAEE,cAAC,IAAD,CACEJ,KAAK,QACLC,KAAK,QACLC,YAAY,qBACZC,UAAU,8NAEZ,cAAC,IAAD,CAAcF,KAAK,QAAQG,UAAU,WAEvC,8CAEE,cAAC,IAAD,CACEJ,KAAK,WACLC,KAAK,WACLC,YAAY,aACZC,UAAU,8NAEZ,cAAC,IAAD,CAAcF,KAAK,WAAWG,UAAU,WAE1C,wBACEJ,KAAK,SACLK,SAAUN,EACVI,UAAU,qLAHZ,SAKoC,kBAAjC,EAAKb,MAAMC,SAASC,SACjB,UACA,eAIR,qCACE,2CAEE,cAAC,IAAD,CACEQ,KAAK,QACLC,KAAK,QACLC,YAAY,qBACZC,UAAU,8NAEZ,cAAC,IAAD,CAAcF,KAAK,QAAQG,UAAU,WAEvC,8CAEE,cAAC,IAAD,CACEJ,KAAK,WACLC,KAAK,WACLC,YAAY,aACZC,UAAU,8NAEZ,cAAC,IAAD,CAAcF,KAAK,WAAWG,UAAU,WAE1C,wBACEJ,KAAK,SACLK,SAAUN,EACVI,UAAU,qLAHZ,SAKoC,kBAAjC,EAAKb,MAAMC,SAASC,SACjB,UACA,6B,GA9FHc,aA2GRC,cAAQ,KAAM,CAAEV,kBF1GE,SAACW,GAAD,8CAAU,WAAOC,GAAP,iBAAAC,EAAA,6DACzCD,EAASE,eADgC,kBAGhBC,IAAMC,KAAN,wEAC4CrC,GAD5C,2BAEhBgC,GAFgB,IAEVM,mBAAmB,KALO,gBAG/BC,EAH+B,EAG/BA,KAIRN,EAASO,YAAgBD,IACzBH,IAAMC,KAAN,iEAC4DE,EAAKE,QADjE,sBACsFF,EAAKG,SACzF,CACErC,MAAO2B,EAAK3B,MACZsC,KAAM,UAZ6B,kDAgBvCV,EAASW,YAAc,KAAMC,SAASN,KAAKO,MAAMC,UAhBV,0DAAV,uDE0GiBzB,eFvFpB,SAACU,GAAD,8CAAU,WAAOC,GAAP,iBAAAC,EAAA,6DACtCD,EAASe,eAD6B,kBAGbZ,IAAMC,KAAN,oFACwDrC,GADxD,2BAEhBgC,GAFgB,IAEVM,mBAAmB,KALI,gBAG5BC,EAH4B,EAG5BA,KAIRN,EAASgB,YAAaV,IAPc,gDASpCN,EAASiB,YAAW,KAAML,SAASN,KAAKO,MAAMC,UATV,yDAAV,wDEuFfhB,CACboB,YAAWxC,IC5GEyC,UARE,WACf,OACE,mCACE,cAAC,EAAD","file":"static/js/AuthPage.3f773f90.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  loginError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  registerError,\r\n  registerRequest,\r\n  registerSuccess,\r\n} from \"./authActions\";\r\n\r\nconst API_KEY = process.env.REACT_APP_API_KEY;\r\nexport const registerOperation = (user) => async (dispatch) => {\r\n  dispatch(registerRequest());\r\n  try {\r\n    const { data } = await axios.post(\r\n      `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${API_KEY}`,\r\n      { ...user, returnSecureToken: true }\r\n    );\r\n    dispatch(registerSuccess(data));\r\n    axios.post(\r\n      `https://phonebook-20-default-rtdb.firebaseio.com/users/${data.localId}.json?auth=${data.idToken}`,\r\n      {\r\n        email: user.email,\r\n        role: \"admin\",\r\n      }\r\n    );\r\n  } catch (error) {\r\n    dispatch(registerError(error.response.data.error.message));\r\n  }\r\n};\r\nexport const loginOperation = (user) => async (dispatch) => {\r\n  dispatch(loginRequest());\r\n  try {\r\n    const { data } = await axios.post(\r\n      `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${API_KEY}`,\r\n      { ...user, returnSecureToken: true }\r\n    );\r\n    dispatch(loginSuccess(data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.response.data.error.message));\r\n  }\r\n};\r\n","import * as yup from \"yup\";\r\n\r\nlet schema = yup.object().shape({\r\n  email: yup.string().email().required(),\r\n  password: yup\r\n    .string()\r\n    .required(\"Enter correct password\")\r\n    .min(6, \"Min 6 symbols\")\r\n    .max(12, \"Max 12 Symbols\")\r\n    .matches(/^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9]).{6,}$/, \"passwordMatches\"),\r\n\r\n  // .matches(/^(?=.*[0-9a-zA-Z!@#$%^&*]{6,})$/, \"0-9a-zA-Z!@#$%^&*\"),\r\n});\r\nexport default schema;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport {\r\n  loginOperation,\r\n  registerOperation,\r\n} from \"../../redux/auth/authOperations\";\r\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\r\nimport schema from \"./Validation/validator\";\r\n\r\nclass AuthForm extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <h1>\r\n            {this.props.location.pathname === \"/registration\"\r\n              ? \"Registeration\"\r\n              : \"Login\"}\r\n          </h1>\r\n          <Formik\r\n            initialValues={{ email: \"\", password: \"\" }}\r\n            validationSchema={schema}\r\n            onSubmit={(values) => {\r\n              this.props.location.pathname === \"/registration\"\r\n                ? this.props.registerOperation(values)\r\n                : this.props.loginOperation(values);\r\n            }}\r\n          >\r\n            {({ isSubmitting }) => (\r\n              <Form>\r\n                {this.props.location.pathname === \"/registration\" ? (\r\n                  <>\r\n                    <label>\r\n                      Name:\r\n                      <Field\r\n                        type=\"text\"\r\n                        name=\"displayName\"\r\n                        placeholder=\"John Wick\"\r\n                        className=\"pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-black border-gray-200 hover:outline-none hover:ring-0 hover:border-black border-gray-200\"\r\n                      />\r\n                      <ErrorMessage name=\"displayName\" component=\"div\" />\r\n                    </label>\r\n                    <label>\r\n                      Email:\r\n                      <Field\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"johnwick@gmail.com\"\r\n                        className=\"pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-black border-gray-200 hover:outline-none hover:ring-0 hover:border-black border-gray-200\"\r\n                      />\r\n                      <ErrorMessage name=\"email\" component=\"div\" />\r\n                    </label>\r\n                    <label>\r\n                      Password:\r\n                      <Field\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"**********\"\r\n                        className=\"pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-black border-gray-200 hover:outline-none hover:ring-0 hover:border-black border-gray-200\"\r\n                      />\r\n                      <ErrorMessage name=\"password\" component=\"div\" />\r\n                    </label>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"w-full px-6 py-3 mt-3 text-lg text-white transition-all duration-150 ease-linear rounded-lg shadow outline-none bg-green-500 hover:bg-green-800 hover:shadow-lg focus:outline-none\"\r\n                    >\r\n                      {this.props.location.pathname === \"/registration\"\r\n                        ? \"Sign up\"\r\n                        : \"Sign in\"}\r\n                    </button>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <label>\r\n                      Email:\r\n                      <Field\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"johnwick@gmail.com\"\r\n                        className=\"pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-black border-gray-200 hover:outline-none hover:ring-0 hover:border-black border-gray-200\"\r\n                      />\r\n                      <ErrorMessage name=\"email\" component=\"div\" />\r\n                    </label>\r\n                    <label>\r\n                      Password:\r\n                      <Field\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"**********\"\r\n                        className=\"pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-black border-gray-200 hover:outline-none hover:ring-0 hover:border-black border-gray-200\"\r\n                      />\r\n                      <ErrorMessage name=\"password\" component=\"div\" />\r\n                    </label>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"w-full px-6 py-3 mt-3 text-lg text-white transition-all duration-150 ease-linear rounded-lg shadow outline-none bg-green-500 hover:bg-green-800 hover:shadow-lg focus:outline-none\"\r\n                    >\r\n                      {this.props.location.pathname === \"/registration\"\r\n                        ? \"Sign up\"\r\n                        : \"Sign in\"}\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { registerOperation, loginOperation })(\r\n  withRouter(AuthForm)\r\n);\r\n","import React from \"react\";\r\nimport AuthForm from \"../Components/Auth/AuthForm\";\r\nconst AuthPage = () => {\r\n  return (\r\n    <>\r\n      <AuthForm />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n"],"sourceRoot":""}