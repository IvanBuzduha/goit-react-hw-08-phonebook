{"version":3,"sources":["Components/Phonebook/PhoneFilter/PhoneFilter.jsx","redux/phonebook/contactsSelector.js","Components/Phonebook/PhoneForm/PhoneForm.jsx","Components/Phonebook/PhoneListItem/PhoneListItem.jsx","Components/Phonebook/PhoneList/PhoneList.jsx","Components/Phonebook/Phonebook.js","redux/phonebook/phonebookOperations.js","pages/ContactsPage.js"],"names":["PhoneFilter","filter","setFilter","type","value","onChange","placeholder","className","contactsSelector","state","contacts","errorSelector","error","loaderSelector","isLoading","getFilteredContacts","createSelector","contact","name","toLowerCase","includes","number","PhoneForm","onHandlSubmit","e","preventDefault","props","addContact","setState","onHandlChange","resetError","target","onSubmit","this","pattern","title","required","Component","connect","ownProps","PhoneListItem","deleteContact","id","onClick","PhoneList","map","Phonebook","a","addContactOperating","deleteContactOperating","getAllContactsOperating","color","height","width","length","filterContacts","mapDispatchToProps","dispatch","setLoading","axios","get","data","Object","keys","key","getAllContacts","setError","response","getState","isNameExist","find","cont","isNumberExist","post","auth","token","idToken","delete","ContactsPage"],"mappings":"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","file":"static/js/Contacts.2b584630.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst PhoneFilter = ({ filter, setFilter }) => {\r\n  // console.log(\"Check filter\", filter);\r\n  return (\r\n    <label>\r\n      Filter:\r\n      <input\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={setFilter}\r\n        placeholder=\"John Wick or +380000000000\"\r\n        className=\"pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-black border-gray-200 hover:outline-none hover:ring-0 hover:border-black border-gray-200\"\r\n      ></input>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default PhoneFilter;\r\n\r\nPhoneFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  setFilter: PropTypes.func,\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const contactsSelector = (state) => state.contacts;\r\nexport const filterSelector = (state) => state.filter;\r\nexport const errorSelector = (state) => state.error;\r\nexport const loaderSelector = (state) => state.isLoading;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [contactsSelector, filterSelector],\r\n  (contacts, filter) => {\r\n    return contacts.filter(\r\n      (contact) =>\r\n        contact.name.toLowerCase().includes(filter.toLowerCase()) ||\r\n        contact.number.includes(filter)\r\n    );\r\n  }\r\n);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { errorSelector } from \"../../../redux/phonebook/contactsSelector\";\r\nimport { connect } from \"react-redux\";\r\nimport { resetError } from \"../../../redux/phonebook/phonebookActions\";\r\nclass PhoneForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  onHandlSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addContact(this.state);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  onHandlChange = (e) => {\r\n    this.props.error && this.props.resetError();\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onHandlSubmit}>\r\n        <label>\r\n          Name:\r\n          <input\r\n            className=\"pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-black border-gray-200 hover:outline-none hover:ring-0 hover:border-black border-gray-200\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            onChange={this.onHandlChange}\r\n            value={this.state.name}\r\n            placeholder=\"John Wick\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number:\r\n          <input\r\n            className=\"pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b-2 appearance-none focus:outline-none focus:ring-0 focus:border-black border-gray-200 hover:outline-none hover:ring-0 hover:border-black border-gray-200\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            placeholder=\"+380000000000\"\r\n            required\r\n            onChange={this.onHandlChange}\r\n            value={this.state.number}\r\n          />\r\n        </label>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full px-6 py-3 mt-3 text-lg text-white transition-all duration-150 ease-linear rounded-lg shadow outline-none bg-green-500 hover:bg-green-800 hover:shadow-lg focus:outline-none\"\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => ({ error: errorSelector(state) });\r\n\r\nexport default connect(mapStateToProps, { resetError })(PhoneForm);\r\n// export default PhoneForm;\r\nPhoneForm.propTypes = {\r\n  addContact: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst PhoneListItem = ({ contact, deleteContact }) => {\r\n  return (\r\n    <li className=\"mt-4\">\r\n      <span className=\"  mb-1 mt-1\">\r\n        {contact.name + \": \" + contact.number}\r\n      </span>\r\n      <button\r\n        id={contact.id}\r\n        type=\"button\"\r\n        onClick={deleteContact}\r\n        className=\"absolute right-8 px-6 mb-1 mt-1  text-white transition-all duration-150 ease-linear rounded-lg shadow outline-none bg-green-500 hover:bg-red-600 hover:shadow-lg focus:outline-none\"\r\n      >\r\n        DELETE\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\nexport default PhoneListItem;\r\nPhoneListItem.propTypes = {\r\n  deleteContact: PropTypes.func,\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n","// import React from \"react\";\r\n// import PropTypes from \"prop-types\";\r\n// const PhoneList = ({ contacts, deleteContact }) => {\r\n//   return (\r\n//     <ul>\r\n//       {contacts.map((contact) => (\r\n//         <li className=\"mt-4\" key={contact.id}>\r\n//           <span className=\"  mb-1 mt-1\">\r\n//             {contact.name + \": \" + contact.number}\r\n//           </span>\r\n\r\n//           <button\r\n//             id={contact.id}\r\n//             type=\"button\"\r\n//             onClick={deleteContact}\r\n//             className=\"absolute right-8 px-6 mb-1 mt-1  text-white transition-all duration-150 ease-linear rounded-lg shadow outline-none bg-green-500 hover:bg-red-600 hover:shadow-lg focus:outline-none\"\r\n//           >\r\n//             DELETE\r\n//           </button>\r\n//         </li>\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// };\r\n\r\n// export default PhoneList;\r\n\r\n// PhoneList.propTypes = {\r\n//   deleteContact: PropTypes.func,\r\n//   contacts: PropTypes.arrayOf(\r\n//     PropTypes.shape({\r\n//       id: PropTypes.string.isRequired,\r\n//       name: PropTypes.string.isRequired,\r\n//       number: PropTypes.string.isRequired,\r\n//     })\r\n//   ),\r\n// };\r\n\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport PhoneListItem from \"./../PhoneListItem/PhoneListItem\";\r\n\r\nconst PhoneList = ({ contacts, deleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <PhoneListItem\r\n          contact={contact}\r\n          key={contact.id}\r\n          deleteContact={deleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nPhoneList.propTypes = {\r\n  deleteContact: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\nexport default PhoneList;\r\n","import React, { Component } from \"react\";\r\nimport PhoneFilter from \"./PhoneFilter/PhoneFilter\";\r\nimport PhoneForm from \"./PhoneForm/PhoneForm\";\r\nimport PhoneList from \"./PhoneList/PhoneList\";\r\nimport { connect } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/phonebook/phonebookActions\";\r\nimport {\r\n  addContactOperating,\r\n  deleteContactOperating,\r\n  getAllContactsOperating,\r\n} from \"../../redux/phonebook/phonebookOperations\";\r\nimport {\r\n  contactsSelector,\r\n  errorSelector,\r\n  getFilteredContacts,\r\n  loaderSelector,\r\n} from \"../../redux/phonebook/contactsSelector\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nclass Phonebook extends Component {\r\n  async componentDidMount() {\r\n    this.props.getAllContactsOperating();\r\n  }\r\n\r\n  addContact = async (contact) => {\r\n    this.props.addContactOperating(contact);\r\n  };\r\n\r\n  deleteContact = async (e) => {\r\n    const { id } = e.target;\r\n    this.props.deleteContactOperating(id);\r\n  };\r\n\r\n  setFilter = (e) => {\r\n    const { value } = e.target;\r\n    this.props.setFilter(value);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"relative mx-auto max-w-md px-8 py-12 bg-white border-0 shadow-lg sm:rounded-3xl \">\r\n          {this.props.isLoading && (\r\n            <Loader\r\n              type=\"Oval\"\r\n              color=\"rgb(16, 185, 129)\"\r\n              height={50}\r\n              width={50}\r\n              className=\"  flex flex-wrap justify-center items-center/\"\r\n            />\r\n          )}\r\n          <PhoneForm addContact={this.addContact} />\r\n          <PhoneFilter filter={this.props.filter} setFilter={this.setFilter} />\r\n          {this.props.error && (\r\n            <h3 className=\"text-red-500\">{this.props.error}</h3>\r\n          )}\r\n          {this.props.contacts.length === 0 && (\r\n            <p>Contacts list is empty. Please, create new cotnact!</p>\r\n          )}\r\n          <PhoneList\r\n            contacts={this.props.filterContacts}\r\n            deleteContact={this.deleteContact}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  contacts: contactsSelector(state),\r\n  filterContacts: getFilteredContacts(state),\r\n  error: errorSelector(state),\r\n  isLoading: loaderSelector(state),\r\n});\r\nconst mapDispatchToProps = {\r\n  getAllContactsOperating,\r\n  addContactOperating,\r\n  deleteContactOperating,\r\n  setFilter,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import axios from \"axios\";\r\nimport { contactsSelector } from \"./contactsSelector\";\r\nimport {\r\n  addContact,\r\n  deleteContact,\r\n  getAllContacts,\r\n  setError,\r\n  setLoading,\r\n} from \"./phonebookActions\";\r\n\r\nconst getAllContactsOperating = () => async (dispatch) => {\r\n  dispatch(setLoading());\r\n  try {\r\n    const { data } = await axios.get(\r\n      `https://phonebook-20-default-rtdb.firebaseio.com/contacts.json`\r\n    );\r\n    if (data) {\r\n      const contacts = Object.keys(data).map((key) => ({\r\n        id: key,\r\n        ...data[key],\r\n      }));\r\n      dispatch(getAllContacts(contacts));\r\n    }\r\n  } catch (error) {\r\n    dispatch(setError(error.response.data.error));\r\n  } finally {\r\n    dispatch(setLoading());\r\n  }\r\n};\r\nconst addContactOperating = (contact) => async (dispatch, getState) => {\r\n  const contacts = contactsSelector(getState());\r\n\r\n  const isNameExist = contacts.find(\r\n    (cont) => cont.name.toLowerCase() === contact.name.toLowerCase()\r\n  );\r\n  const isNumberExist = contacts.find((cont) => cont.number === contact.number);\r\n  if (isNameExist) {\r\n    dispatch(setError(`This name  ${isNameExist?.name} is already exist`));\r\n    return;\r\n  }\r\n  if (isNumberExist) {\r\n    dispatch(setError(`This number ${isNumberExist?.number} is already exist`));\r\n    return;\r\n  }\r\n  dispatch(setLoading());\r\n  try {\r\n    const { data } = await axios.post(\r\n      `https://phonebook-20-default-rtdb.firebaseio.com/contacts.json?auth=${\r\n        getState().auth.token.idToken\r\n      }`,\r\n      contact\r\n    );\r\n    dispatch(addContact({ ...contact, id: data.name }));\r\n  } catch (error) {\r\n    dispatch(setError(error.response.data.error));\r\n  } finally {\r\n    dispatch(setLoading());\r\n  }\r\n};\r\nconst deleteContactOperating = (id) => async (dispatch, getState) => {\r\n  dispatch(setLoading());\r\n  try {\r\n    await axios.delete(\r\n      `https://phonebook-20-default-rtdb.firebaseio.com/contacts/${id}.json?auth=${\r\n        getState().auth.token.idToken\r\n      }`\r\n    );\r\n    dispatch(deleteContact(id));\r\n  } catch (error) {\r\n    dispatch(setError(error.response.data.error));\r\n  } finally {\r\n    dispatch(setLoading());\r\n  }\r\n};\r\n\r\nexport { getAllContactsOperating, addContactOperating, deleteContactOperating };\r\n","import React from 'react';\r\nimport Phonebook from '../Components/Phonebook/Phonebook';\r\nconst ContactsPage = () => {\r\n  return (\r\n    <>\r\n    <Phonebook />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactsPage;"],"sourceRoot":""}